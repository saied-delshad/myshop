# Generated by Django 3.2 on 2023-09-22 07:07

import django.core.validators
from django.db import migrations, models
import main_config.tools


class Migration(migrations.Migration):

    dependencies = [
        ('shop', '0006_productmonetaryoption'),
    ]

    operations = [
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='create date')),
                ('modify_date', models.DateTimeField(auto_now=True, null=True, verbose_name='modify date')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='title')),
                ('site_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='site title')),
                ('site_icon', models.ImageField(upload_to=main_config.tools.UploadToPathAndRename('setting'), verbose_name='site icon')),
                ('site_logo', models.ImageField(upload_to=main_config.tools.UploadToPathAndRename('setting'), verbose_name='site logo')),
                ('contact_us', models.CharField(blank=True, max_length=200, null=True, verbose_name='contact us')),
                ('product_finishing_alert', models.PositiveIntegerField(default=10, verbose_name='product finishing alert')),
                ('value_added_tax_percent', models.PositiveIntegerField(default=9, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)], verbose_name='value added tax percent')),
            ],
            options={
                'verbose_name': 'settings',
                'verbose_name_plural': 'settings',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='has_value_added_tax',
            field=models.BooleanField(default=True, verbose_name='has value added tax'),
        ),
        migrations.AlterField(
            model_name='productmonetaryoption',
            name='price',
            field=models.PositiveIntegerField(default=0, help_text='Toman', verbose_name='price'),
        ),
    ]
